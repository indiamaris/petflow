{"ast":null,"code":"// Configurações do React Flow\nexport const FLOW_CONFIG = {\n  // Configurações de conexão\n  connectionMode: 'loose',\n  defaultEdgeOptions: {\n    type: 'smoothstep',\n    animated: false,\n    style: {\n      stroke: '#666',\n      strokeWidth: 2\n    }\n  },\n  // Configurações de seleção\n  selectionMode: 'full',\n  selectionOnDrag: true,\n  // Configurações de zoom e pan\n  minZoom: 0.1,\n  maxZoom: 2,\n  zoomOnScroll: true,\n  panOnScroll: false,\n  panOnScrollMode: 'free',\n  // Configurações de snap\n  snapToGrid: true,\n  snapGrid: [15, 15],\n  // Configurações de validação\n  onConnectStart: () => {},\n  onConnectEnd: () => {},\n  // Configurações de acessibilidade\n  ariaLabel: 'PetFlow - Canvas de Artefatos de Animais',\n  // Configurações de performance\n  nodesDraggable: true,\n  nodesConnectable: true,\n  elementsSelectable: true,\n  // Configurações de estilo\n  fitView: true,\n  fitViewOptions: {\n    padding: 0.1,\n    includeHiddenNodes: false\n  }\n};\n\n// Configurações dos nós personalizados\nexport const NODE_CONFIG = {\n  granja: {\n    minWidth: 120,\n    minHeight: 80,\n    draggable: true,\n    selectable: true,\n    deletable: false\n  },\n  animal: {\n    minWidth: 100,\n    minHeight: 60,\n    draggable: true,\n    selectable: true,\n    deletable: true\n  }\n};\n\n// Configurações das conexões\nexport const EDGE_CONFIG = {\n  default: {\n    type: 'smoothstep',\n    animated: false,\n    style: {\n      stroke: '#666',\n      strokeWidth: 2\n    }\n  },\n  granja: {\n    type: 'smoothstep',\n    animated: true,\n    style: {\n      stroke: '#ff6b6b',\n      strokeWidth: 3\n    }\n  },\n  animal: {\n    type: 'smoothstep',\n    animated: false,\n    style: {\n      stroke: '#4ecdc4',\n      strokeWidth: 2\n    }\n  }\n};","map":{"version":3,"names":["FLOW_CONFIG","connectionMode","defaultEdgeOptions","type","animated","style","stroke","strokeWidth","selectionMode","selectionOnDrag","minZoom","maxZoom","zoomOnScroll","panOnScroll","panOnScrollMode","snapToGrid","snapGrid","onConnectStart","onConnectEnd","ariaLabel","nodesDraggable","nodesConnectable","elementsSelectable","fitView","fitViewOptions","padding","includeHiddenNodes","NODE_CONFIG","granja","minWidth","minHeight","draggable","selectable","deletable","animal","EDGE_CONFIG","default"],"sources":["/Users/indiamaris/CODE/petflow/src/config/flow-config.js"],"sourcesContent":["// Configurações do React Flow\nexport const FLOW_CONFIG = {\n  // Configurações de conexão\n  connectionMode: 'loose',\n  defaultEdgeOptions: {\n    type: 'smoothstep',\n    animated: false,\n    style: {\n      stroke: '#666',\n      strokeWidth: 2\n    }\n  },\n  \n  // Configurações de seleção\n  selectionMode: 'full',\n  selectionOnDrag: true,\n  \n  // Configurações de zoom e pan\n  minZoom: 0.1,\n  maxZoom: 2,\n  zoomOnScroll: true,\n  panOnScroll: false,\n  panOnScrollMode: 'free',\n  \n  // Configurações de snap\n  snapToGrid: true,\n  snapGrid: [15, 15],\n  \n  // Configurações de validação\n  onConnectStart: () => {},\n  onConnectEnd: () => {},\n  \n  // Configurações de acessibilidade\n  ariaLabel: 'PetFlow - Canvas de Artefatos de Animais',\n  \n  // Configurações de performance\n  nodesDraggable: true,\n  nodesConnectable: true,\n  elementsSelectable: true,\n  \n  // Configurações de estilo\n  fitView: true,\n  fitViewOptions: {\n    padding: 0.1,\n    includeHiddenNodes: false\n  }\n};\n\n// Configurações dos nós personalizados\nexport const NODE_CONFIG = {\n  granja: {\n    minWidth: 120,\n    minHeight: 80,\n    draggable: true,\n    selectable: true,\n    deletable: false\n  },\n  animal: {\n    minWidth: 100,\n    minHeight: 60,\n    draggable: true,\n    selectable: true,\n    deletable: true\n  }\n};\n\n// Configurações das conexões\nexport const EDGE_CONFIG = {\n  default: {\n    type: 'smoothstep',\n    animated: false,\n    style: { stroke: '#666', strokeWidth: 2 }\n  },\n  granja: {\n    type: 'smoothstep',\n    animated: true,\n    style: { stroke: '#ff6b6b', strokeWidth: 3 }\n  },\n  animal: {\n    type: 'smoothstep',\n    animated: false,\n    style: { stroke: '#4ecdc4', strokeWidth: 2 }\n  }\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG;EACzB;EACAC,cAAc,EAAE,OAAO;EACvBC,kBAAkB,EAAE;IAClBC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;MACLC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE;IACf;EACF,CAAC;EAED;EACAC,aAAa,EAAE,MAAM;EACrBC,eAAe,EAAE,IAAI;EAErB;EACAC,OAAO,EAAE,GAAG;EACZC,OAAO,EAAE,CAAC;EACVC,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,KAAK;EAClBC,eAAe,EAAE,MAAM;EAEvB;EACAC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAElB;EACAC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EAEtB;EACAC,SAAS,EAAE,0CAA0C;EAErD;EACAC,cAAc,EAAE,IAAI;EACpBC,gBAAgB,EAAE,IAAI;EACtBC,kBAAkB,EAAE,IAAI;EAExB;EACAC,OAAO,EAAE,IAAI;EACbC,cAAc,EAAE;IACdC,OAAO,EAAE,GAAG;IACZC,kBAAkB,EAAE;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,MAAM,EAAE;IACNC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACNL,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG;EACzBC,OAAO,EAAE;IACPjC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,WAAW,EAAE;IAAE;EAC1C,CAAC;EACDqB,MAAM,EAAE;IACNzB,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAE;EAC7C,CAAC;EACD2B,MAAM,EAAE;IACN/B,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAE;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}