{"ast":null,"code":"var _jsxFileName = \"/Users/indiamaris/CODE/petflow/src/components/FlowCanvas.js\",\n  _s = $RefreshSig$();\nimport { addEdge, Background, Controls, MiniMap, ReactFlow, ReactFlowProvider, useReactFlow } from '@xyflow/react';\nimport '@xyflow/react/dist/style.css';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FLOW_CONFIG } from '../config/flow-config';\nimport { saveAnimalData } from '../utils/storage-utils';\nimport AnimalDetailsPanel from './AnimalDetailsPanel';\nimport ContextMenu from './ContextMenu';\nimport CustomNode from './CustomNode';\nimport './FlowCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  custom: CustomNode\n};\n\n// Componente interno que usa useReactFlow\nfunction FlowCanvasInner({\n  nodes: initialNodes,\n  edges: initialEdges,\n  onUpdate,\n  onMatilhaClick,\n  onAnimalUpdate,\n  canvasId,\n  highlightedNodes\n}) {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [selectedAnimal, setSelectedAnimal] = useState(null);\n  const [isDetailsPanelOpen, setIsDetailsPanelOpen] = useState(false);\n  const [contextMenu, setContextMenu] = useState({\n    show: false,\n    position: null,\n    sourceNode: null\n  });\n  const reactFlowWrapper = useRef(null);\n  const reactFlowInstance = useReactFlow();\n  const onNodesChange = useCallback(changes => {\n    setNodes(nds => {\n      let updatedNodes = [...nds];\n      changes.forEach(change => {\n        if (change.type === 'position') {\n          updatedNodes = updatedNodes.map(node => node.id === change.id ? {\n            ...node,\n            position: change.position\n          } : node);\n        } else if (change.type === 'remove') {\n          updatedNodes = updatedNodes.filter(node => node.id !== change.id);\n        } else if (change.type === 'add') {\n          updatedNodes = [...updatedNodes, change.item];\n        }\n      });\n      return updatedNodes;\n    });\n  }, []);\n  const onEdgesChange = useCallback(changes => {\n    setEdges(eds => {\n      let updatedEdges = [...eds];\n      changes.forEach(change => {\n        if (change.type === 'remove') {\n          updatedEdges = updatedEdges.filter(edge => edge.id !== change.id);\n        } else if (change.type === 'add') {\n          updatedEdges = [...updatedEdges, change.item];\n        }\n      });\n      return updatedEdges;\n    });\n  }, []);\n  const onConnect = useCallback(params => {\n    setEdges(eds => addEdge(params, eds));\n  }, []);\n  const onNodeClick = useCallback((event, node) => {\n    console.log('Node clicked:', node);\n    if (node.data.type === 'matilha') {\n      onMatilhaClick(node.id);\n    } else if (node.data.type === 'animal') {\n      setSelectedAnimal(node);\n      setIsDetailsPanelOpen(true);\n    }\n  }, [onMatilhaClick]);\n  const onNodeContextMenu = useCallback((event, node) => {\n    event.preventDefault();\n    setContextMenu({\n      show: true,\n      position: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      sourceNode: node\n    });\n  }, []);\n  const onPaneContextMenu = useCallback(event => {\n    event.preventDefault();\n    setContextMenu({\n      show: true,\n      position: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      sourceNode: null\n    });\n  }, []);\n\n  // Atualizar o estado global quando os nós ou edges mudarem\n  useEffect(() => {\n    if (onUpdate) {\n      onUpdate(nodes, edges);\n    }\n  }, [nodes, edges, onUpdate]);\n\n  // Sincronizar com as mudanças externas apenas na primeira renderização\n  useEffect(() => {\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n  }, []); // Array vazio para executar apenas uma vez\n\n  const handleSaveAnimal = useCallback((animalId, animalData) => {\n    // Atualizar o estado local dos nós imediatamente\n    setNodes(prevNodes => prevNodes.map(node => node.id === animalId ? {\n      ...node,\n      data: {\n        ...node.data,\n        ...animalData,\n        // Atualizar o animalName para refletir no canvas\n        animalName: animalData.nome || node.data.animalName\n      }\n    } : node));\n\n    // Atualizar o estado global\n    if (onAnimalUpdate) {\n      onAnimalUpdate(animalId, animalData);\n    }\n\n    // Fechar o painel\n    setIsDetailsPanelOpen(false);\n    setSelectedAnimal(null);\n  }, [onAnimalUpdate]);\n  const handleCloseDetailsPanel = useCallback(() => {\n    setIsDetailsPanelOpen(false);\n    setSelectedAnimal(null);\n  }, []);\n  const handleCloseContextMenu = useCallback(() => {\n    setContextMenu({\n      show: false,\n      position: null,\n      sourceNode: null\n    });\n  }, []);\n  const handleSaveSVG = useCallback(() => {\n    if (reactFlowInstance) {\n      try {\n        // Obter todos os nós para calcular bounds\n        const allNodes = reactFlowInstance.getNodes();\n        if (allNodes.length === 0) {\n          alert('Não há nós para exportar.');\n          return;\n        }\n\n        // Calcular bounds dos nós\n        const bounds = allNodes.reduce((bounds, node) => {\n          const nodeWidth = node.data.type === 'granja' ? 120 : 100;\n          const nodeHeight = node.data.type === 'granja' ? 80 : 60;\n          bounds.minX = Math.min(bounds.minX, node.position.x);\n          bounds.maxX = Math.max(bounds.maxX, node.position.x + nodeWidth);\n          bounds.minY = Math.min(bounds.minY, node.position.y);\n          bounds.maxY = Math.max(bounds.maxY, node.position.y + nodeHeight);\n          return bounds;\n        }, {\n          minX: allNodes[0].position.x,\n          maxX: allNodes[0].position.x,\n          minY: allNodes[0].position.y,\n          maxY: allNodes[0].position.y\n        });\n\n        // Adicionar padding\n        const padding = 100;\n        const width = bounds.maxX - bounds.minX + padding * 2;\n        const height = bounds.maxY - bounds.minY + padding * 2;\n\n        // Criar um novo SVG\n        const newSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        newSvg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        newSvg.setAttribute('viewBox', `${bounds.minX - padding} ${bounds.minY - padding} ${width} ${height}`);\n        newSvg.setAttribute('width', width);\n        newSvg.setAttribute('height', height);\n        newSvg.setAttribute('style', 'background-color: #f8f9fa;');\n\n        // Adicionar background\n        const background = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        background.setAttribute('width', '100%');\n        background.setAttribute('height', '100%');\n        background.setAttribute('fill', '#f8f9fa');\n        newSvg.appendChild(background);\n\n        // Adicionar nós como retângulos representativos\n        allNodes.forEach(node => {\n          const nodeElement = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n          const nodeWidth = node.data.type === 'granja' ? 120 : 100;\n          const nodeHeight = node.data.type === 'granja' ? 80 : 60;\n          nodeElement.setAttribute('x', node.position.x);\n          nodeElement.setAttribute('y', node.position.y);\n          nodeElement.setAttribute('width', nodeWidth);\n          nodeElement.setAttribute('height', nodeHeight);\n          nodeElement.setAttribute('fill', node.data.color || '#666');\n          nodeElement.setAttribute('stroke', '#333');\n          nodeElement.setAttribute('stroke-width', '2');\n          nodeElement.setAttribute('rx', '8');\n\n          // Adicionar texto do nó\n          const textElement = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n          textElement.setAttribute('x', node.position.x + nodeWidth / 2);\n          textElement.setAttribute('y', node.position.y + nodeHeight / 2 + 5);\n          textElement.setAttribute('text-anchor', 'middle');\n          textElement.setAttribute('fill', 'white');\n          textElement.setAttribute('font-size', '12');\n          textElement.setAttribute('font-weight', 'bold');\n          textElement.textContent = node.data.animalName || node.data.label;\n          newSvg.appendChild(nodeElement);\n          newSvg.appendChild(textElement);\n        });\n\n        // Adicionar conexões\n        const allEdges = reactFlowInstance.getEdges();\n        allEdges.forEach(edge => {\n          const sourceNode = allNodes.find(n => n.id === edge.source);\n          const targetNode = allNodes.find(n => n.id === edge.target);\n          if (sourceNode && targetNode) {\n            const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            const sourceX = sourceNode.position.x + (sourceNode.data.type === 'granja' ? 60 : 50);\n            const sourceY = sourceNode.position.y + (sourceNode.data.type === 'granja' ? 40 : 30);\n            const targetX = targetNode.position.x + (targetNode.data.type === 'granja' ? 60 : 50);\n            const targetY = targetNode.position.y + (targetNode.data.type === 'granja' ? 40 : 30);\n            line.setAttribute('x1', sourceX);\n            line.setAttribute('y1', sourceY);\n            line.setAttribute('x2', targetX);\n            line.setAttribute('y2', targetY);\n            line.setAttribute('stroke', '#666');\n            line.setAttribute('stroke-width', '2');\n            line.setAttribute('marker-end', 'url(#arrowhead)');\n            newSvg.appendChild(line);\n          }\n        });\n\n        // Adicionar definição de seta\n        const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        const marker = document.createElementNS('http://www.w3.org/2000/svg', 'marker');\n        marker.setAttribute('id', 'arrowhead');\n        marker.setAttribute('markerWidth', '10');\n        marker.setAttribute('markerHeight', '7');\n        marker.setAttribute('refX', '9');\n        marker.setAttribute('refY', '3.5');\n        marker.setAttribute('orient', 'auto');\n        const polygon = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n        polygon.setAttribute('points', '0 0, 10 3.5, 0 7');\n        polygon.setAttribute('fill', '#666');\n        marker.appendChild(polygon);\n        defs.appendChild(marker);\n        newSvg.appendChild(defs);\n\n        // Converter para string SVG\n        const svgData = new XMLSerializer().serializeToString(newSvg);\n        const svgBlob = new Blob([svgData], {\n          type: 'image/svg+xml;charset=utf-8'\n        });\n\n        // Criar link de download\n        const url = URL.createObjectURL(svgBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `petflow_canvas_${canvasId}_${new Date().toISOString().split('T')[0]}.svg`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n        alert('Canvas salvo como SVG com sucesso!');\n      } catch (error) {\n        console.error('Erro ao salvar SVG:', error);\n        alert('Erro ao salvar SVG. Tente novamente.');\n      }\n    }\n  }, [reactFlowInstance, canvasId]);\n\n  // Expor função de salvar SVG globalmente\n  useEffect(() => {\n    window.saveCanvasAsSVG = handleSaveSVG;\n    return () => {\n      delete window.saveCanvasAsSVG;\n    };\n  }, [handleSaveSVG]);\n  const handleCreateArtifact = useCallback((artifactType, position) => {\n    const newNodeId = `${artifactType.id}-${Date.now()}`;\n\n    // Gerar nome único para animais\n    let animalName = artifactType.label;\n    if (artifactType.type === 'animal') {\n      const randomIndex = Math.floor(Math.random() * 24);\n      const names = ['Buddy', 'Max', 'Luna', 'Rocky', 'Bella', 'Charlie', 'Lucy', 'Cooper', 'Daisy', 'Bear', 'Molly', 'Duke', 'Sophie', 'Jack', 'Ruby', 'Oliver', 'Chloe', 'Tucker', 'Penny', 'Winston', 'Lola', 'Murphy', 'Zoe', 'Finn'];\n      animalName = names[randomIndex];\n    }\n\n    // Calcular posição do novo nó baseada no nó de origem\n    let newNodePosition;\n    if (contextMenu.sourceNode) {\n      const sourcePos = contextMenu.sourceNode.position;\n      newNodePosition = {\n        x: sourcePos.x + 200,\n        // 200px à direita do nó de origem\n        y: sourcePos.y + 100 // 100px abaixo do nó de origem\n      };\n    } else {\n      // Se não houver nó de origem, usar a posição do clique\n      newNodePosition = {\n        x: position.x - 100,\n        y: position.y - 50\n      };\n    }\n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newNodePosition,\n      data: {\n        ...artifactType,\n        animalName: artifactType.type === 'animal' ? animalName : artifactType.label,\n        apelido: '',\n        peso: '',\n        idade: '',\n        responsavel: ''\n      }\n    };\n\n    // Criar uma nova conexão se houver um nó de origem\n    let newEdge = null;\n    if (contextMenu.sourceNode) {\n      const edgeId = `${contextMenu.sourceNode.id}-${newNodeId}`;\n      newEdge = {\n        id: edgeId,\n        source: contextMenu.sourceNode.id,\n        target: newNodeId,\n        type: 'smoothstep',\n        animated: false,\n        style: {\n          stroke: contextMenu.sourceNode.data.color || '#666',\n          strokeWidth: 3,\n          strokeDasharray: '5,5' // Linha tracejada para destacar\n        },\n        label: 'Novo',\n        // Label para identificar a conexão\n        labelStyle: {\n          fill: contextMenu.sourceNode.data.color || '#666',\n          fontWeight: 'bold',\n          fontSize: '12px'\n        }\n      };\n    }\n\n    // Adicionar o novo nó e edge\n    setNodes(prevNodes => [...prevNodes, newNode]);\n    if (newEdge) {\n      setEdges(prevEdges => [...prevEdges, newEdge]);\n    }\n\n    // Atualizar o estado global\n    if (onUpdate) {\n      const updatedNodes = [...nodes, newNode];\n      const updatedEdges = newEdge ? [...edges, newEdge] : edges;\n      onUpdate(updatedNodes, updatedEdges);\n    }\n\n    // Se for um animal, salvar dados iniciais no localStorage e abrir painel\n    if (artifactType.type === 'animal') {\n      const initialData = {\n        nome: animalName,\n        apelido: '',\n        peso: '',\n        idade: '',\n        responsavel: ''\n      };\n      saveAnimalData(newNodeId, initialData);\n      setSelectedAnimal(newNode);\n      setIsDetailsPanelOpen(true);\n    }\n  }, [nodes, edges, onUpdate, contextMenu.sourceNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-canvas\",\n    ref: reactFlowWrapper,\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes.map(node => ({\n        ...node,\n        data: {\n          ...node.data,\n          highlightedNodes: highlightedNodes\n        }\n      })),\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodeClick: onNodeClick,\n      onNodeContextMenu: onNodeContextMenu,\n      onPaneContextMenu: onPaneContextMenu,\n      nodeTypes: nodeTypes,\n      ...FLOW_CONFIG,\n      attributionPosition: \"bottom-left\",\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => {\n          switch (node.data.type) {\n            case 'matilha':\n              return '#ff6b6b';\n            case 'animal':\n              return '#4ecdc4';\n            default:\n              return '#95a5a6';\n          }\n        },\n        nodeStrokeWidth: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimalDetailsPanel, {\n      animal: selectedAnimal,\n      isOpen: isDetailsPanelOpen,\n      onClose: handleCloseDetailsPanel,\n      onSave: handleSaveAnimal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      position: contextMenu.position,\n      onClose: handleCloseContextMenu,\n      onCreateArtifact: handleCreateArtifact,\n      sourceNode: contextMenu.sourceNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n}\n\n// Componente principal que envolve com ReactFlowProvider\n_s(FlowCanvasInner, \"xNZPIhoTLsrqtKnLWYo3G0jLZ1A=\", false, function () {\n  return [useReactFlow];\n});\n_c = FlowCanvasInner;\nfunction FlowCanvas(props) {\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(FlowCanvasInner, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n_c2 = FlowCanvas;\nexport default FlowCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"FlowCanvasInner\");\n$RefreshReg$(_c2, \"FlowCanvas\");","map":{"version":3,"names":["addEdge","Background","Controls","MiniMap","ReactFlow","ReactFlowProvider","useReactFlow","React","useCallback","useEffect","useRef","useState","FLOW_CONFIG","saveAnimalData","AnimalDetailsPanel","ContextMenu","CustomNode","jsxDEV","_jsxDEV","nodeTypes","custom","FlowCanvasInner","nodes","initialNodes","edges","initialEdges","onUpdate","onMatilhaClick","onAnimalUpdate","canvasId","highlightedNodes","_s","setNodes","setEdges","selectedAnimal","setSelectedAnimal","isDetailsPanelOpen","setIsDetailsPanelOpen","contextMenu","setContextMenu","show","position","sourceNode","reactFlowWrapper","reactFlowInstance","onNodesChange","changes","nds","updatedNodes","forEach","change","type","map","node","id","filter","item","onEdgesChange","eds","updatedEdges","edge","onConnect","params","onNodeClick","event","console","log","data","onNodeContextMenu","preventDefault","x","clientX","y","clientY","onPaneContextMenu","handleSaveAnimal","animalId","animalData","prevNodes","animalName","nome","handleCloseDetailsPanel","handleCloseContextMenu","handleSaveSVG","allNodes","getNodes","length","alert","bounds","reduce","nodeWidth","nodeHeight","minX","Math","min","maxX","max","minY","maxY","padding","width","height","newSvg","document","createElementNS","setAttribute","background","appendChild","nodeElement","color","textElement","textContent","label","allEdges","getEdges","find","n","source","targetNode","target","line","sourceX","sourceY","targetX","targetY","defs","marker","polygon","svgData","XMLSerializer","serializeToString","svgBlob","Blob","url","URL","createObjectURL","link","createElement","href","download","Date","toISOString","split","body","click","removeChild","revokeObjectURL","error","window","saveCanvasAsSVG","handleCreateArtifact","artifactType","newNodeId","now","randomIndex","floor","random","names","newNodePosition","sourcePos","newNode","apelido","peso","idade","responsavel","newEdge","edgeId","animated","style","stroke","strokeWidth","strokeDasharray","labelStyle","fill","fontWeight","fontSize","prevEdges","initialData","className","ref","children","attributionPosition","fileName","_jsxFileName","lineNumber","columnNumber","gap","nodeColor","nodeStrokeWidth","animal","isOpen","onClose","onSave","onCreateArtifact","_c","FlowCanvas","props","_c2","$RefreshReg$"],"sources":["/Users/indiamaris/CODE/petflow/src/components/FlowCanvas.js"],"sourcesContent":["import {\n    addEdge,\n    Background,\n    Controls,\n    MiniMap,\n    ReactFlow,\n    ReactFlowProvider,\n    useReactFlow\n} from '@xyflow/react';\nimport '@xyflow/react/dist/style.css';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FLOW_CONFIG } from '../config/flow-config';\nimport { saveAnimalData } from '../utils/storage-utils';\nimport AnimalDetailsPanel from './AnimalDetailsPanel';\nimport ContextMenu from './ContextMenu';\nimport CustomNode from './CustomNode';\nimport './FlowCanvas.css';\n\nconst nodeTypes = {\n  custom: CustomNode\n};\n\n// Componente interno que usa useReactFlow\nfunction FlowCanvasInner({ nodes: initialNodes, edges: initialEdges, onUpdate, onMatilhaClick, onAnimalUpdate, canvasId, highlightedNodes }) {\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [selectedAnimal, setSelectedAnimal] = useState(null);\n  const [isDetailsPanelOpen, setIsDetailsPanelOpen] = useState(false);\n  const [contextMenu, setContextMenu] = useState({ show: false, position: null, sourceNode: null });\n  const reactFlowWrapper = useRef(null);\n  const reactFlowInstance = useReactFlow();\n\n  const onNodesChange = useCallback((changes) => {\n    setNodes((nds) => {\n      let updatedNodes = [...nds];\n      \n      changes.forEach(change => {\n        if (change.type === 'position') {\n          updatedNodes = updatedNodes.map(node => \n            node.id === change.id \n              ? { ...node, position: change.position }\n              : node\n          );\n        } else if (change.type === 'remove') {\n          updatedNodes = updatedNodes.filter(node => node.id !== change.id);\n        } else if (change.type === 'add') {\n          updatedNodes = [...updatedNodes, change.item];\n        }\n      });\n      \n      return updatedNodes;\n    });\n  }, []);\n\n  const onEdgesChange = useCallback((changes) => {\n    setEdges((eds) => {\n      let updatedEdges = [...eds];\n      \n      changes.forEach(change => {\n        if (change.type === 'remove') {\n          updatedEdges = updatedEdges.filter(edge => edge.id !== change.id);\n        } else if (change.type === 'add') {\n          updatedEdges = [...updatedEdges, change.item];\n        }\n      });\n      \n      return updatedEdges;\n    });\n  }, []);\n\n  const onConnect = useCallback(\n    (params) => {\n      setEdges((eds) => addEdge(params, eds));\n    },\n    []\n  );\n\n  const onNodeClick = useCallback((event, node) => {\n    console.log('Node clicked:', node);\n    if (node.data.type === 'matilha') {\n      onMatilhaClick(node.id);\n    } else if (node.data.type === 'animal') {\n      setSelectedAnimal(node);\n      setIsDetailsPanelOpen(true);\n    }\n  }, [onMatilhaClick]);\n\n  const onNodeContextMenu = useCallback((event, node) => {\n    event.preventDefault();\n    setContextMenu({\n      show: true,\n      position: { x: event.clientX, y: event.clientY },\n      sourceNode: node\n    });\n  }, []);\n\n  const onPaneContextMenu = useCallback((event) => {\n    event.preventDefault();\n    setContextMenu({\n      show: true,\n      position: { x: event.clientX, y: event.clientY },\n      sourceNode: null\n    });\n  }, []);\n\n  // Atualizar o estado global quando os nós ou edges mudarem\n  useEffect(() => {\n    if (onUpdate) {\n      onUpdate(nodes, edges);\n    }\n  }, [nodes, edges, onUpdate]);\n\n  // Sincronizar com as mudanças externas apenas na primeira renderização\n  useEffect(() => {\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n  }, []); // Array vazio para executar apenas uma vez\n\n  const handleSaveAnimal = useCallback((animalId, animalData) => {\n    // Atualizar o estado local dos nós imediatamente\n    setNodes(prevNodes => \n      prevNodes.map(node => \n        node.id === animalId \n          ? { \n              ...node, \n              data: { \n                ...node.data, \n                ...animalData,\n                // Atualizar o animalName para refletir no canvas\n                animalName: animalData.nome || node.data.animalName\n              } \n            }\n          : node\n      )\n    );\n    \n    // Atualizar o estado global\n    if (onAnimalUpdate) {\n      onAnimalUpdate(animalId, animalData);\n    }\n    \n    // Fechar o painel\n    setIsDetailsPanelOpen(false);\n    setSelectedAnimal(null);\n  }, [onAnimalUpdate]);\n\n  const handleCloseDetailsPanel = useCallback(() => {\n    setIsDetailsPanelOpen(false);\n    setSelectedAnimal(null);\n  }, []);\n\n  const handleCloseContextMenu = useCallback(() => {\n    setContextMenu({ show: false, position: null, sourceNode: null });\n  }, []);\n\n  const handleSaveSVG = useCallback(() => {\n    if (reactFlowInstance) {\n      try {\n        // Obter todos os nós para calcular bounds\n        const allNodes = reactFlowInstance.getNodes();\n        \n        if (allNodes.length === 0) {\n          alert('Não há nós para exportar.');\n          return;\n        }\n        \n        // Calcular bounds dos nós\n        const bounds = allNodes.reduce((bounds, node) => {\n          const nodeWidth = node.data.type === 'granja' ? 120 : 100;\n          const nodeHeight = node.data.type === 'granja' ? 80 : 60;\n          \n          bounds.minX = Math.min(bounds.minX, node.position.x);\n          bounds.maxX = Math.max(bounds.maxX, node.position.x + nodeWidth);\n          bounds.minY = Math.min(bounds.minY, node.position.y);\n          bounds.maxY = Math.max(bounds.maxY, node.position.y + nodeHeight);\n          return bounds;\n        }, { \n          minX: allNodes[0].position.x, \n          maxX: allNodes[0].position.x, \n          minY: allNodes[0].position.y, \n          maxY: allNodes[0].position.y \n        });\n        \n        // Adicionar padding\n        const padding = 100;\n        const width = bounds.maxX - bounds.minX + padding * 2;\n        const height = bounds.maxY - bounds.minY + padding * 2;\n        \n        // Criar um novo SVG\n        const newSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        newSvg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        newSvg.setAttribute('viewBox', `${bounds.minX - padding} ${bounds.minY - padding} ${width} ${height}`);\n        newSvg.setAttribute('width', width);\n        newSvg.setAttribute('height', height);\n        newSvg.setAttribute('style', 'background-color: #f8f9fa;');\n        \n        // Adicionar background\n        const background = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        background.setAttribute('width', '100%');\n        background.setAttribute('height', '100%');\n        background.setAttribute('fill', '#f8f9fa');\n        newSvg.appendChild(background);\n        \n        // Adicionar nós como retângulos representativos\n        allNodes.forEach(node => {\n          const nodeElement = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n          const nodeWidth = node.data.type === 'granja' ? 120 : 100;\n          const nodeHeight = node.data.type === 'granja' ? 80 : 60;\n          \n          nodeElement.setAttribute('x', node.position.x);\n          nodeElement.setAttribute('y', node.position.y);\n          nodeElement.setAttribute('width', nodeWidth);\n          nodeElement.setAttribute('height', nodeHeight);\n          nodeElement.setAttribute('fill', node.data.color || '#666');\n          nodeElement.setAttribute('stroke', '#333');\n          nodeElement.setAttribute('stroke-width', '2');\n          nodeElement.setAttribute('rx', '8');\n          \n          // Adicionar texto do nó\n          const textElement = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n          textElement.setAttribute('x', node.position.x + nodeWidth / 2);\n          textElement.setAttribute('y', node.position.y + nodeHeight / 2 + 5);\n          textElement.setAttribute('text-anchor', 'middle');\n          textElement.setAttribute('fill', 'white');\n          textElement.setAttribute('font-size', '12');\n          textElement.setAttribute('font-weight', 'bold');\n          textElement.textContent = node.data.animalName || node.data.label;\n          \n          newSvg.appendChild(nodeElement);\n          newSvg.appendChild(textElement);\n        });\n        \n        // Adicionar conexões\n        const allEdges = reactFlowInstance.getEdges();\n        allEdges.forEach(edge => {\n          const sourceNode = allNodes.find(n => n.id === edge.source);\n          const targetNode = allNodes.find(n => n.id === edge.target);\n          \n          if (sourceNode && targetNode) {\n            const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            const sourceX = sourceNode.position.x + (sourceNode.data.type === 'granja' ? 60 : 50);\n            const sourceY = sourceNode.position.y + (sourceNode.data.type === 'granja' ? 40 : 30);\n            const targetX = targetNode.position.x + (targetNode.data.type === 'granja' ? 60 : 50);\n            const targetY = targetNode.position.y + (targetNode.data.type === 'granja' ? 40 : 30);\n            \n            line.setAttribute('x1', sourceX);\n            line.setAttribute('y1', sourceY);\n            line.setAttribute('x2', targetX);\n            line.setAttribute('y2', targetY);\n            line.setAttribute('stroke', '#666');\n            line.setAttribute('stroke-width', '2');\n            line.setAttribute('marker-end', 'url(#arrowhead)');\n            \n            newSvg.appendChild(line);\n          }\n        });\n        \n        // Adicionar definição de seta\n        const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        const marker = document.createElementNS('http://www.w3.org/2000/svg', 'marker');\n        marker.setAttribute('id', 'arrowhead');\n        marker.setAttribute('markerWidth', '10');\n        marker.setAttribute('markerHeight', '7');\n        marker.setAttribute('refX', '9');\n        marker.setAttribute('refY', '3.5');\n        marker.setAttribute('orient', 'auto');\n        \n        const polygon = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n        polygon.setAttribute('points', '0 0, 10 3.5, 0 7');\n        polygon.setAttribute('fill', '#666');\n        \n        marker.appendChild(polygon);\n        defs.appendChild(marker);\n        newSvg.appendChild(defs);\n        \n        // Converter para string SVG\n        const svgData = new XMLSerializer().serializeToString(newSvg);\n        const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\n        \n        // Criar link de download\n        const url = URL.createObjectURL(svgBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `petflow_canvas_${canvasId}_${new Date().toISOString().split('T')[0]}.svg`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n        \n        alert('Canvas salvo como SVG com sucesso!');\n      } catch (error) {\n        console.error('Erro ao salvar SVG:', error);\n        alert('Erro ao salvar SVG. Tente novamente.');\n      }\n    }\n  }, [reactFlowInstance, canvasId]);\n\n  // Expor função de salvar SVG globalmente\n  useEffect(() => {\n    window.saveCanvasAsSVG = handleSaveSVG;\n    \n    return () => {\n      delete window.saveCanvasAsSVG;\n    };\n  }, [handleSaveSVG]);\n\n  const handleCreateArtifact = useCallback((artifactType, position) => {\n    const newNodeId = `${artifactType.id}-${Date.now()}`;\n    \n    // Gerar nome único para animais\n    let animalName = artifactType.label;\n    if (artifactType.type === 'animal') {\n      const randomIndex = Math.floor(Math.random() * 24);\n      const names = ['Buddy', 'Max', 'Luna', 'Rocky', 'Bella', 'Charlie', 'Lucy', 'Cooper', 'Daisy', 'Bear', 'Molly', 'Duke', 'Sophie', 'Jack', 'Ruby', 'Oliver', 'Chloe', 'Tucker', 'Penny', 'Winston', 'Lola', 'Murphy', 'Zoe', 'Finn'];\n      animalName = names[randomIndex];\n    }\n    \n    // Calcular posição do novo nó baseada no nó de origem\n    let newNodePosition;\n    if (contextMenu.sourceNode) {\n      const sourcePos = contextMenu.sourceNode.position;\n      newNodePosition = {\n        x: sourcePos.x + 200, // 200px à direita do nó de origem\n        y: sourcePos.y + 100  // 100px abaixo do nó de origem\n      };\n    } else {\n      // Se não houver nó de origem, usar a posição do clique\n      newNodePosition = { x: position.x - 100, y: position.y - 50 };\n    }\n    \n    const newNode = {\n      id: newNodeId,\n      type: 'custom',\n      position: newNodePosition,\n      data: {\n        ...artifactType,\n        animalName: artifactType.type === 'animal' ? animalName : artifactType.label,\n        apelido: '',\n        peso: '',\n        idade: '',\n        responsavel: ''\n      }\n    };\n\n    // Criar uma nova conexão se houver um nó de origem\n    let newEdge = null;\n    if (contextMenu.sourceNode) {\n      const edgeId = `${contextMenu.sourceNode.id}-${newNodeId}`;\n      newEdge = {\n        id: edgeId,\n        source: contextMenu.sourceNode.id,\n        target: newNodeId,\n        type: 'smoothstep',\n        animated: false,\n        style: { \n          stroke: contextMenu.sourceNode.data.color || '#666', \n          strokeWidth: 3,\n          strokeDasharray: '5,5' // Linha tracejada para destacar\n        },\n        label: 'Novo', // Label para identificar a conexão\n        labelStyle: {\n          fill: contextMenu.sourceNode.data.color || '#666',\n          fontWeight: 'bold',\n          fontSize: '12px'\n        }\n      };\n    }\n\n    // Adicionar o novo nó e edge\n    setNodes(prevNodes => [...prevNodes, newNode]);\n    if (newEdge) {\n      setEdges(prevEdges => [...prevEdges, newEdge]);\n    }\n    \n    // Atualizar o estado global\n    if (onUpdate) {\n      const updatedNodes = [...nodes, newNode];\n      const updatedEdges = newEdge ? [...edges, newEdge] : edges;\n      onUpdate(updatedNodes, updatedEdges);\n    }\n    \n    // Se for um animal, salvar dados iniciais no localStorage e abrir painel\n    if (artifactType.type === 'animal') {\n      const initialData = {\n        nome: animalName,\n        apelido: '',\n        peso: '',\n        idade: '',\n        responsavel: ''\n      };\n      \n      saveAnimalData(newNodeId, initialData);\n      setSelectedAnimal(newNode);\n      setIsDetailsPanelOpen(true);\n    }\n  }, [nodes, edges, onUpdate, contextMenu.sourceNode]);\n\n  return (\n    <div className=\"flow-canvas\" ref={reactFlowWrapper}>\n      <ReactFlow\n        nodes={nodes.map(node => ({\n          ...node,\n          data: {\n            ...node.data,\n            highlightedNodes: highlightedNodes\n          }\n        }))}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodeClick={onNodeClick}\n        onNodeContextMenu={onNodeContextMenu}\n        onPaneContextMenu={onPaneContextMenu}\n        nodeTypes={nodeTypes}\n        {...FLOW_CONFIG}\n        attributionPosition=\"bottom-left\"\n      >\n        <Controls />\n        <Background color=\"#aaa\" gap={16} />\n        <MiniMap\n          nodeColor={(node) => {\n            switch (node.data.type) {\n              case 'matilha':\n                return '#ff6b6b';\n              case 'animal':\n                return '#4ecdc4';\n              default:\n                return '#95a5a6';\n            }\n          }}\n          nodeStrokeWidth={3}\n        />\n      </ReactFlow>\n      \n      <AnimalDetailsPanel\n        animal={selectedAnimal}\n        isOpen={isDetailsPanelOpen}\n        onClose={handleCloseDetailsPanel}\n        onSave={handleSaveAnimal}\n      />\n      \n      <ContextMenu\n        position={contextMenu.position}\n        onClose={handleCloseContextMenu}\n        onCreateArtifact={handleCreateArtifact}\n        sourceNode={contextMenu.sourceNode}\n      />\n    </div>\n  );\n}\n\n// Componente principal que envolve com ReactFlowProvider\nfunction FlowCanvas(props) {\n  return (\n    <ReactFlowProvider>\n      <FlowCanvasInner {...props} />\n    </ReactFlowProvider>\n  );\n}\n\nexport default FlowCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}