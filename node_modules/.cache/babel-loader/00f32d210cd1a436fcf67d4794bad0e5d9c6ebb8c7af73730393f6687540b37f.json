{"ast":null,"code":"var _jsxFileName = \"/Users/indiamaris/CODE/petflow/src/components/ControlPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ControlPanel.css';\nimport DataManager from './DataManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlPanel = ({\n  canvases,\n  currentCanvasId,\n  onCanvasSelect,\n  onGranjaClick\n}) => {\n  _s();\n  const [expandedNodes, setExpandedNodes] = useState(new Set(['main']));\n  const toggleNode = nodeId => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n  const renderTreeNode = (canvasId, level = 0) => {\n    const canvas = canvases[canvasId];\n    if (!canvas) return null;\n    const isExpanded = expandedNodes.has(canvasId);\n    const hasChildren = Object.keys(canvases).some(id => id !== canvasId && canvases[id].parentId === canvasId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tree-item ${currentCanvasId === canvasId ? 'active' : ''}`,\n        style: {\n          paddingLeft: `${level * 20 + 10}px`\n        },\n        children: [hasChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `expand-button ${isExpanded ? 'expanded' : ''}`,\n          onClick: () => toggleNode(canvasId),\n          children: isExpanded ? '‚ñº' : '‚ñ∂'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"canvas-name\",\n          onClick: () => onCanvasSelect(canvasId),\n          children: canvas.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), canvas.parentId && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"granja-button\",\n          onClick: () => onGranjaClick(canvasId.replace('granja-', '')),\n          title: \"Abrir Granja\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), isExpanded && hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-children\",\n        children: Object.keys(canvases).filter(id => canvases[id].parentId === canvasId).map(childId => renderTreeNode(childId, level + 1))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, canvasId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n  const getGranjaNodes = () => {\n    return Object.values(canvases).filter(canvas => canvas.parentId === 'main');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Painel de Controle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Artefatos Granjas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container\",\n      children: renderTreeNode('main')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"granja-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Resumo das Granjas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"granja-count\",\n        children: [\"Total de Granjas: \", getGranjaNodes().length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), getGranjaNodes().map(granja => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"granja-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: granja.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"open-granja-btn\",\n          onClick: () => onGranjaClick(granja.id.replace('granja-', '')),\n          children: \"Abrir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, granja.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlPanel, \"1TiHOFJ52xKSk4jHHOEcus53Rpg=\");\n_c = ControlPanel;\nexport default ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","DataManager","jsxDEV","_jsxDEV","ControlPanel","canvases","currentCanvasId","onCanvasSelect","onGranjaClick","_s","expandedNodes","setExpandedNodes","Set","toggleNode","nodeId","newExpanded","has","delete","add","renderTreeNode","canvasId","level","canvas","isExpanded","hasChildren","Object","keys","some","id","parentId","className","children","style","paddingLeft","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","replace","title","filter","map","childId","getGranjaNodes","values","length","granja","_c","$RefreshReg$"],"sources":["/Users/indiamaris/CODE/petflow/src/components/ControlPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ControlPanel.css';\nimport DataManager from './DataManager';\n\nconst ControlPanel = ({ canvases, currentCanvasId, onCanvasSelect, onGranjaClick }) => {\n  const [expandedNodes, setExpandedNodes] = useState(new Set(['main']));\n\n  const toggleNode = (nodeId) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  const renderTreeNode = (canvasId, level = 0) => {\n    const canvas = canvases[canvasId];\n    if (!canvas) return null;\n\n    const isExpanded = expandedNodes.has(canvasId);\n    const hasChildren = Object.keys(canvases).some(id => \n      id !== canvasId && canvases[id].parentId === canvasId\n    );\n\n    return (\n      <div key={canvasId} className=\"tree-node\">\n        <div \n          className={`tree-item ${currentCanvasId === canvasId ? 'active' : ''}`}\n          style={{ paddingLeft: `${level * 20 + 10}px` }}\n        >\n          {hasChildren && (\n            <button \n              className={`expand-button ${isExpanded ? 'expanded' : ''}`}\n              onClick={() => toggleNode(canvasId)}\n            >\n              {isExpanded ? '‚ñº' : '‚ñ∂'}\n            </button>\n          )}\n          \n          <span \n            className=\"canvas-name\"\n            onClick={() => onCanvasSelect(canvasId)}\n          >\n            {canvas.name}\n          </span>\n          \n          {canvas.parentId && (\n            <button \n              className=\"granja-button\"\n              onClick={() => onGranjaClick(canvasId.replace('granja-', ''))}\n              title=\"Abrir Granja\"\n            >\n              üè†\n            </button>\n          )}\n        </div>\n        \n        {isExpanded && hasChildren && (\n          <div className=\"tree-children\">\n            {Object.keys(canvases)\n              .filter(id => canvases[id].parentId === canvasId)\n              .map(childId => renderTreeNode(childId, level + 1))\n            }\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getGranjaNodes = () => {\n    return Object.values(canvases).filter(canvas => \n      canvas.parentId === 'main'\n    );\n  };\n\n  return (\n    <div className=\"control-panel\">\n      <div className=\"panel-header\">\n        <h3>Painel de Controle</h3>\n        <p>Artefatos Granjas</p>\n      </div>\n      \n      <div className=\"tree-container\">\n        {renderTreeNode('main')}\n      </div>\n      \n      <div className=\"granja-summary\">\n        <h4>Resumo das Granjas</h4>\n        <div className=\"granja-count\">\n          Total de Granjas: {getGranjaNodes().length}\n        </div>\n        {getGranjaNodes().map(granja => (\n          <div key={granja.id} className=\"granja-item\">\n            <span>{granja.name}</span>\n            <button \n              className=\"open-granja-btn\"\n              onClick={() => onGranjaClick(granja.id.replace('granja-', ''))}\n            >\n              Abrir\n            </button>\n          </div>\n        ))}\n      </div>\n      \n      <DataManager />\n    </div>\n  );\n};\n\nexport default ControlPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}