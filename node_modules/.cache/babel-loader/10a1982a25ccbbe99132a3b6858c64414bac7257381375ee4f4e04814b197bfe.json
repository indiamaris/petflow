{"ast":null,"code":"var _jsxFileName = \"/Users/indiamaris/CODE/petflow/src/components/CustomNode.js\";\nimport React from 'react';\nimport { Handle } from '@xyflow/react';\nimport './CustomNode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data,\n  selected,\n  id,\n  highlightedNodes\n}) => {\n  const {\n    label,\n    type,\n    animalName,\n    color,\n    shape\n  } = data;\n  const getShapeStyle = () => {\n    const baseStyle = {\n      backgroundColor: color,\n      border: selected ? '3px solid #61dafb' : '2px solid #fff',\n      boxShadow: selected ? '0 0 0 3px rgba(97, 218, 251, 0.3)' : '0 2px 8px rgba(0, 0, 0, 0.15)'\n    };\n    switch (shape) {\n      case 'circle':\n        return {\n          ...baseStyle,\n          borderRadius: '50%'\n        };\n      case 'square':\n        return {\n          ...baseStyle,\n          borderRadius: '8px'\n        };\n      case 'triangle':\n        return {\n          ...baseStyle,\n          clipPath: 'polygon(50% 0%, 0% 100%, 100% 100%)'\n        };\n      case 'diamond':\n        return {\n          ...baseStyle,\n          transform: 'rotate(45deg)'\n        };\n      case 'hexagon':\n        return {\n          ...baseStyle,\n          clipPath: 'polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)'\n        };\n      case 'star':\n        return {\n          ...baseStyle,\n          clipPath: 'polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%)'\n        };\n      default:\n        return baseStyle;\n    }\n  };\n  const getLabelStyle = () => {\n    if (shape === 'triangle' || shape === 'diamond') {\n      return {\n        transform: 'rotate(-45deg)'\n      };\n    }\n    return {};\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `custom-node ${type} ${selected ? 'selected' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"top\",\n      style: {\n        background: '#555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-content\",\n      style: getShapeStyle(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-label\",\n        style: getLabelStyle(),\n        children: type === 'granja' ? label : animalName || 'Sem Nome'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), type === 'animal' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animal-type\",\n        style: getLabelStyle(),\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"bottom\",\n      style: {\n        background: '#555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","Handle","jsxDEV","_jsxDEV","CustomNode","data","selected","id","highlightedNodes","label","type","animalName","color","shape","getShapeStyle","baseStyle","backgroundColor","border","boxShadow","borderRadius","clipPath","transform","getLabelStyle","className","children","position","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/indiamaris/CODE/petflow/src/components/CustomNode.js"],"sourcesContent":["import React from 'react';\nimport { Handle } from '@xyflow/react';\nimport './CustomNode.css';\n\nconst CustomNode = ({ data, selected, id, highlightedNodes }) => {\n  const { label, type, animalName, color, shape } = data;\n  \n  const getShapeStyle = () => {\n    const baseStyle = {\n      backgroundColor: color,\n      border: selected ? '3px solid #61dafb' : '2px solid #fff',\n      boxShadow: selected ? '0 0 0 3px rgba(97, 218, 251, 0.3)' : '0 2px 8px rgba(0, 0, 0, 0.15)'\n    };\n\n    switch (shape) {\n      case 'circle':\n        return { ...baseStyle, borderRadius: '50%' };\n      case 'square':\n        return { ...baseStyle, borderRadius: '8px' };\n      case 'triangle':\n        return { ...baseStyle, clipPath: 'polygon(50% 0%, 0% 100%, 100% 100%)' };\n      case 'diamond':\n        return { ...baseStyle, transform: 'rotate(45deg)' };\n      case 'hexagon':\n        return { ...baseStyle, clipPath: 'polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)' };\n      case 'star':\n        return { ...baseStyle, clipPath: 'polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%)' };\n      default:\n        return baseStyle;\n    }\n  };\n\n  const getLabelStyle = () => {\n    if (shape === 'triangle' || shape === 'diamond') {\n      return { transform: 'rotate(-45deg)' };\n    }\n    return {};\n  };\n\n  return (\n    <div className={`custom-node ${type} ${selected ? 'selected' : ''}`}>\n      <Handle\n        type=\"target\"\n        position=\"top\"\n        style={{ background: '#555' }}\n      />\n      \n      <div className=\"node-content\" style={getShapeStyle()}>\n        <div className=\"node-label\" style={getLabelStyle()}>\n          {type === 'granja' ? label : (animalName || 'Sem Nome')}\n        </div>\n        {type === 'animal' && (\n          <div className=\"animal-type\" style={getLabelStyle()}>\n            {label}\n          </div>\n        )}\n      </div>\n      \n      <Handle\n        type=\"source\"\n        position=\"bottom\"\n        style={{ background: '#555' }}\n      />\n    </div>\n  );\n};\n\nexport default CustomNode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}